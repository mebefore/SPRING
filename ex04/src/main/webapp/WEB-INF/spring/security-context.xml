<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-5.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
		
	<security:http pattern="/css/**" security="none"/>
	
	<!-- 시큐리티 적용 경로/필터가 작동하는 경로들  -->
	 <security:http>
	<security:intercept-url pattern="/top.jsp" access="permitAll()"/>
	<security:intercept-url pattern="/admin/**" access="hasAuthority('ROLE_ADMIN')"/> <!--인증된 사람 중 특정 권한 갖고 있는 사람만 가능-->
	<security:intercept-url pattern="/**" access="isAuthenticated()"/> <!-- 권한은 상관없고 인증된 사람은 가능 -->
	<security:form-login default-target-url="/top.jsp"/> <!--form login 로그인 성공했을 때 어디로 갈 지 경로 설정 -->
	<security:logout logout-url="/logout" logout-success-url="/top.jsp"/> <!-- 로그아웃 처리할 URL (security가 알아서 만들기 때문에, 이 경로로 요청만 하면된다) -->
	<security:csrf disabled="false"/> <!-- 활성화 여부 체크  -->
	</security:http>
	
	<bean id="userDetailService" class="com.yedam.web.user.service.impl.CustomUserDetailService"/>
	
	<!-- 아키텍쳐 : 인증/인가 어떻게 처리할 지 정의하는 부분 -->
	<security:authentication-manager> <!--로그인 처리방식 정의  -->
	<security:authentication-provider user-service-ref="userDetailService"> 
		<!-- <security:user-service>
			<security:user name="user" password="{noop}1234" authorities="ROLE_USER"/> 권한(authorities) 복수 가능
			<security:user name="admin" password="{noop}1234" authorities="ROLE_ADMIN"/>
		</security:user-service> -->
		<!-- sql문 2개인 이유: 한사람이 여러개 권한 가질 수 있도록 하기 위해  -->
		<!-- <security:jdbc-user-service data-source-ref="dataSource"
			users-by-username-query="select LOGIN_ID, '{noop}' || PASSWORD, 1
									 from T_USER
									 where LOGIN_ID = ?"
			authorities-by-username-query="select LOGIN_ID, ROLE_NAME
										   from T_ROLE
											 inner join T_USER_ROLE on T_ROLE.ID = T_USER_ROLE.ROLE_ID
											 inner join T_USER on T_USER_ROLE.USER_ID = T_USER.ID
										   where LOGIN_ID = ?"
		/> -->
		<!--jdbc 기반으로 userservice, db 핸들링 하는 값 알려달라. database.xml에서 dataSource 복사 해옴
			datasource는 db기반으로 직접적으로..
			my-batis는 매퍼가 가진 실행문을 이용하는 것-->
	</security:authentication-provider>
	</security:authentication-manager>
	
</beans>
